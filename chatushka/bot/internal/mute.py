from datetime import datetime, timedelta, timezone
from enum import Enum
from random import choice

from chatushka.bot.settings import get_settings
from chatushka.core.matchers import CommandsMatcher
from chatushka.core.transports.models import ChatPermissions, Message, User
from chatushka.core.transports.telegram_bot_api import TelegramBotApi

RESTRICT_PERMISSION = ChatPermissions(
    can_send_messages=False,
    can_send_media_messages=False,
    can_send_polls=False,
    can_send_other_messages=False,
)
settings = get_settings()
mute_matcher = CommandsMatcher(
    prefixes=settings.command_prefixes,
    postfixes=settings.command_postfixes,
)


class MuteMessages(Enum):
    ACCIDENT = (
        'üßê <a href="tg://user?id={user}">{name}</a> —Å–ø–æ—Ç–∫–Ω—É–ª—Å—è, —É–ø–∞–ª –∏ –ø–æ–ø–∞–ª –≤ –±–æ–ª—å–Ω–∏—Ü—É –Ω–∞ {time} –º–∏–Ω—É—Ç.',
        'üßê <a href="tg://user?id={user}">{name}</a> –∑–∞–∏–≥—Ä–∞–ª—Å—è —Ä–µ–≤–æ–ª—å–≤–µ—Ä–æ–º –∏ —É–≥–æ–¥–∏–ª –≤ —Ç—Ä–∞–≤–º–ø—É–Ω–∫—Ç –Ω–∞ {time} –º–∏–Ω—É—Ç.',
        'üßê <a href="tg://user?id={user}">{name}</a> –ø–µ—Ä–µ–≤–æ–¥–∏–ª –±–∞–±—É—à–∫—É —á–µ—Ä–µ–∑ –¥–æ—Ä–æ–≥—É –∏ —Ç–µ–ø–µ—Ä—å –æ—Ç–¥—ã—Ö–∞–µ—Ç {time} –º–∏–Ω—É—Ç.',
        'üßê <a href="tg://user?id={user}">{name}</a> —Ä–µ—à–∏–ª –ø–æ–¥—É–º–∞—Ç—å –æ –∂–∏–∑–Ω–∏ {time} –º–∏–Ω—É—Ç.',
    )
    LOOSER = (
        'üßê <a href="tg://user?id={looser_id}">{looser_name}</a> —Ö–æ—Ç–µ–ª —É–±–∏—Ç—å '
        '<a href="tg://user?id={victim_id}">{victim_name}</a>, –Ω–æ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏ –æ–Ω '
        "–≤—ã–Ω—É–∂–¥–µ–Ω –ø—Ä–æ–≤–µ—Å—Ç–∏ –≤ —Ç—é—Ä—å–º–µ {time} –º–∏–Ω—É—Ç",
        'üßê –£ <a href="tg://user?id={looser_id}">{looser_name}</a> –ª–∞–ø–∫–∏ –∫–æ—Ä–æ—Ç–∫–æ–≤–∞—Ç—ã '
        '—á—Ç–æ–± —É–±–∏—Ç—å <a href="tg://user?id={victim_id}">{victim_name}</a>',
    )


async def send_mute_request(
    api: TelegramBotApi,
    message: Message,
    initiator: User,
    restrict_user: User,
    restrict_time: timedelta,
) -> None:
    text_tmpl = choice(MuteMessages.ACCIDENT.value)
    is_success = await api.restrict_chat_member(
        chat_id=message.chat.id,
        user_id=restrict_user.id,
        permissions=RESTRICT_PERMISSION,
        until_date=datetime.now(tz=timezone.utc) + restrict_time,
    )
    if is_success:
        await api.send_message(
            chat_id=message.chat.id,
            text=text_tmpl.format(
                user=restrict_user.id,
                name=restrict_user.readable_name,
                time=int(restrict_time.total_seconds() // 60),
            ),
        )
        return
    text_tmpl = choice(MuteMessages.LOOSER.value)
    await api.send_message(
        chat_id=message.chat.id,
        text=text_tmpl.format(
            looser_id=initiator.id,
            looser_name=initiator.readable_name,
            victim_id=restrict_user.id,
            victim_name=restrict_user.readable_name,
        ),
        reply_to_message_id=message.message_id,
    )
