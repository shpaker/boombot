from datetime import datetime, timedelta, timezone
from random import randrange

from chatushka.transports.models import ChatPermissions, Message
from chatushka.transports.telegram_bot_api import TelegramBotApi


async def suicide(
    api: TelegramBotApi,
    message: Message,
) -> None:
    restrict_time = timedelta(minutes=randrange(1, 4 * 60))
    try:
        is_success = await api.restrict_chat_member(
            chat_id=message.chat.id,
            user_id=message.user.id,
            permissions=ChatPermissions(
                can_send_messages=False,
                can_send_media_messages=False,
                can_send_polls=False,
                can_send_other_messages=False,
            ),
            until_date=datetime.now(tz=timezone.utc) + restrict_time,
        )
    except ValueError:
        is_success = False
    if is_success:
        await api.send_message(
            chat_id=message.chat.id,
            text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.user.readable_name} —Å–∞–º–æ–≤—ã–ø–∏–ª–∏–ª—Å—è –Ω–∞ {restrict_time}",
        )
        return None
    await api.send_message(
        chat_id=message.chat.id,
        text=f"–õ–∞–ø–∫–∏ –∫–æ—Ä–æ—Ç–∫–æ–≤–∞—Ç—ã —á—Ç–æ–± —É–±–∏—Ç—å {message.user.readable_name}",
        reply_to_message_id=message.message_id,
    )


async def mute(
    api: TelegramBotApi,
    message: Message,
    args: list[str],
) -> None:

    if not message.reply_to_message:
        await api.send_message(
            chat_id=message.chat.id,
            text=f"üßê –ö–æ–º–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å —Ä–µ–ø–ª–∞–µ–º",
            reply_to_message_id=message.message_id,
        )
        return None

    try:
        restrict_time = timedelta(hours=int(args[0]))
    except (ValueError, IndexError):
        restrict_time = timedelta(minutes=randrange(10, 30))
        await api.send_message(
            chat_id=message.chat.id,
            text=f"üßê –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–ø–∞—Ä—Å–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ –∏ —è —Ä–µ—à–∏–ª, "
                 f"—á—Ç–æ –Ω–∞–¥–æ –∑–∞–º—å—é—Ç–∏—Ç—å {message.reply_to_message.user.readable_name} "
                 f"–Ω–∞ {restrict_time} –º–∏–Ω—É—Ç",
            reply_to_message_id=message.message_id,
        )

    try:
        is_success = await api.restrict_chat_member(
            chat_id=message.chat.id,
            user_id=message.reply_to_message.user.id,
            permissions=ChatPermissions(
                can_send_messages=False,
                can_send_media_messages=False,
                can_send_polls=False,
                can_send_other_messages=False,
            ),
            until_date=datetime.now(tz=timezone.utc) + restrict_time,
        )
    except ValueError:
        is_success = False
    if is_success:
        await api.send_message(
            chat_id=message.chat.id,
            text=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.reply_to_message.user.readable_name} –ø—Ä–∏–Ω—è–ª –æ–±–µ—Ç –º–æ–ª—á–∞–Ω–∏—è",
        )
        return None
    await api.send_message(
        chat_id=message.chat.id,
        text=f"–õ–∞–ø–∫–∏ –∫–æ—Ä–æ—Ç–∫–æ–≤–∞—Ç—ã —á—Ç–æ–± –ø–æ–∫–∞—Ä–∞—Ç—å {message.reply_to_message.user.readable_name}",
        reply_to_message_id=message.message_id,
    )
